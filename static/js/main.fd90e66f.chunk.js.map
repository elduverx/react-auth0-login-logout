{"version":3,"sources":["components/LoginButton.jsx","components/LogoutButton.jsx","components/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","Profile","user","isAuthenticated","src","picture","alt","name","email","App","isLoading","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"kOAQeA,EANK,WAAO,IACjBC,EAAsBC,cAAtBD,kBAER,OAAO,wBAAQE,QAAS,kBAAMF,KAAvB,oBCEMG,EALM,WAAO,IAClBC,EAAWH,cAAXG,OACR,OAAO,wBAAQF,QAAS,kBAAME,KAAvB,sBCWMC,EAbC,WAAO,IAAD,EACcJ,cAA1BK,EADY,EACZA,KACR,OAFoB,EACNC,iBAGV,gCACE,qBAAKC,IAAKF,EAAKG,QAASC,IAAKJ,EAAKK,OAClC,6BAAKL,EAAKK,OACV,4BAAIL,EAAKM,YCSFC,MAZf,WAAgB,IAAD,EAC0BZ,cAA/BM,EADK,EACLA,gBACR,OAFa,EACYO,UACH,4CAEpB,sBAAKC,UAAU,MAAf,UACE,4CACCR,EAAkB,cAAC,EAAD,IAAmB,cAAC,EAAD,IACtC,cAAC,EAAD,QCDSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CACEC,OANSC,4BAOTC,SANWD,mCAOXE,YAAaC,OAAOC,SAASC,OAH/B,SAKE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.fd90e66f.chunk.js","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  // tiene funciones de callback para ser usados.\r\n  return <button onClick={() => loginWithRedirect()}>Login</button>;\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return <button onClick={() => logout()}>Log Out</button>;\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nconst Profile = () => {\r\n  const { user, isAuthenticated } = useAuth0();\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <img src={user.picture} alt={user.name} />\r\n        <h2>{user.name}</h2>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import './App.css';\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport Profile from './components/Profile';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nfunction App() {\n  const { isAuthenticated, isLoading } = useAuth0();\n  if (isLoading) return <h2>loading...</h2>;\n  return (\n    <div className=\"App\">\n      <h1>Aplication</h1>\n      {isAuthenticated ? <LogoutButton /> : <LoginButton />}\n      <Profile />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n//auth0 es un loggeador que requiere dos datos para ser usado.\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}